user  nginx;
worker_processes  1;
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /var/log/nginx/access.log  main;
    sendfile        on;
    keepalive_timeout  65;

    server {
        listen       80;
        server_name  localhost;
        
        # Main page
        location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
        }
        
        # Chat interface
        location /chat {
            root   /usr/share/nginx/html;
            try_files $uri $uri/ /chat.html;
        }
        
        # API proxy for AI agent service
        location /api/ai-agent/ {
            proxy_pass http://ai-agent-service:8002/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Handle service unavailability gracefully
            proxy_connect_timeout 5s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;
            
            # Return 503 Service Unavailable if backend is down
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
            proxy_intercept_errors on;
            error_page 502 503 504 = @fallback;
        }
        
        # Fallback location for when AI agent service is unavailable
        location @fallback {
            return 503 '{"error": "AI Agent Service is temporarily unavailable", "status": "service_unavailable"}';
            add_header Content-Type application/json;
        }
        
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }
    }
} 